name: Deploy Lambda Function

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Restaurar dependências
        run: dotnet restore ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj

      - name: Compilar projeto
        run: dotnet build ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj --configuration Release --no-restore

      - name: Publicar projeto
        run: dotnet publish ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj --configuration Release --output ./publish --no-build -p:PublishReadyToRun=false

      - name: Criar pacote ZIP
        run: |
          cd publish
          zip -r ../package.zip .
          cd ..

      - name: Verificar se a função existe
        run: |
          echo "Verificando se a função Lambda existe..."
          # Tenta diferentes métodos de verificação para contornar problemas de permissão
          if aws lambda list-functions --query 'Functions[?FunctionName==`FastFoodAutenticacao`]' --output text | grep -q "FastFoodAutenticacao"; then
            echo "✅ Função Lambda encontrada via list-functions"
            echo "LAMBDA_EXISTS=true" >> $GITHUB_ENV
          elif aws lambda get-function --function-name FastFoodAutenticacao >/dev/null 2>&1; then
            echo "✅ Função Lambda encontrada via get-function"
            echo "LAMBDA_EXISTS=true" >> $GITHUB_ENV
          else
            echo "⚠️ Não foi possível verificar a função via API, mas assumindo que existe"
            echo "LAMBDA_EXISTS=true" >> $GITHUB_ENV
          fi

      - name: Aguardar função estar disponível
        if: env.LAMBDA_EXISTS == 'true'
        run: |
          echo "Aguardando função estar disponível para atualização..."
          # Aguarda um tempo fixo em vez de verificar status (evita problema de permissão)
          sleep 30
          echo "Prosseguindo com a atualização..."

      - name: Deploy para AWS Lambda
        if: env.LAMBDA_EXISTS == 'true'
        run: |
          aws lambda update-function-code \
            --function-name FastFoodAutenticacao \
            --zip-file fileb://package.zip

      - name: Aguardar atualização do código
        if: env.LAMBDA_EXISTS == 'true'
        run: |
          echo "Aguardando atualização do código..."
          sleep 15

      - name: Atualizar configuração da função
        if: env.LAMBDA_EXISTS == 'true'
        run: |
          # Criar arquivo JSON com as variáveis de ambiente
          cat > env-vars.json << EOF
          {
            "Variables": {
              "COGNITO__REGION": "${{ vars.AWS_REGION }}",
              "COGNITO__USERPOOLID": "${{ secrets.COGNITO_USER_POOL_ID }}",
              "COGNITO__CLIENTID": "${{ secrets.COGNITO_CLIENT_ID }}"
            }
          }
          EOF
          
          # Atualizar configuração da função
          aws lambda update-function-configuration \
            --function-name FastFoodAutenticacao \
            --handler "FiapFastFoodAutenticacao::FiapFastFoodAutenticacao.Handlers.Dispatcher::FunctionHandlerAsync" \
            --runtime "dotnet8" \
            --timeout 30 \
            --memory-size 512 \
            --environment file://env-vars.json

      - name: Verificar deploy
        if: env.LAMBDA_EXISTS == 'true'
        run: |
          echo "✅ Deploy concluído com sucesso!"
          echo "Função Lambda atualizada: FastFoodAutenticacao"
