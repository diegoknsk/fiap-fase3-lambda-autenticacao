name: Deploy Lambda Function

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Restaurar dependências
        run: dotnet restore ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj

      - name: Compilar projeto
        run: dotnet build ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj --configuration Release --no-restore

      - name: Publicar projeto
        run: dotnet publish ./src/FiapFastFoodAutenticacao/FiapFastFoodAutenticacao.csproj --configuration Release --output ./publish --no-build -p:PublishReadyToRun=false

      - name: Criar pacote ZIP
        run: |
          cd publish
          zip -r ../package.zip .
          cd ..

      - name: Verificar status da função
        run: |
          echo "Verificando status da função Lambda..."
          aws lambda get-function --function-name FastFoodAutenticacao --query 'Configuration.State' --output text

      - name: Aguardar função estar disponível
        run: |
          echo "Aguardando função estar disponível para atualização..."
          while true; do
            STATE=$(aws lambda get-function --function-name FastFoodAutenticacao --query 'Configuration.State' --output text)
            echo "Estado atual: $STATE"
            if [ "$STATE" = "Active" ]; then
              echo "Função está ativa, prosseguindo..."
              break
            fi
            echo "Função não está ativa, aguardando 10 segundos..."
            sleep 10
          done

      - name: Deploy para AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name FastFoodAutenticacao \
            --zip-file fileb://package.zip

      - name: Aguardar atualização do código
        run: |
          echo "Aguardando atualização do código..."
          sleep 15

      - name: Atualizar configuração da função
        run: |
          aws lambda update-function-configuration \
            --function-name FastFoodAutenticacao \
            --handler "FiapFastFoodAutenticacao::FiapFastFoodAutenticacao.Handlers.Dispatcher::FunctionHandlerAsync" \
            --runtime "dotnet8" \
            --timeout 30 \
            --memory-size 512 \
            --environment Variables='{
              "COGNITO__REGION":"${{ vars.AWS_REGION }}",
              "COGNITO__USERPOOLID":"${{ secrets.COGNITO_USER_POOL_ID }}",
              "COGNITO__CLIENTID":"${{ secrets.COGNITO_CLIENT_ID }}"
            }'

      - name: Verificar deploy
        run: |
          aws lambda get-function --function-name FastFoodAutenticacao
